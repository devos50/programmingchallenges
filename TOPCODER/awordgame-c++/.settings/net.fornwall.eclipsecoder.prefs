eclipse.preferences.version=1
problemStatement=AWordGame.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_43" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>AWordGame</string> \n  </void> \n  <void property\="contestName"> \n   <string>2004 TCCC Online Round 2 - 1000 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;AWordGame&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;\nConsider the following game played between two players (let&apos;s call them Joe and Mary)\:\nJoe starts the game by thinking of some English word. He doesn&apos;t tell Mary what word,\nbut instead tells Mary the first letter in his word. Now it&apos;s Mary&apos;s turn, who must think of\na word that starts with the letter Joe has revealed. She then tells Joe the first\ntwo letters of her word. Now Joe must think of some word again (which may or may not\nbe the same as Joe&apos;s original word), starting with the two letters of Mary&apos;s word, and tell\nMary the first three letters in his word.\n&lt;/p&gt;\n\n&lt;p&gt;\nThis procedure is repeated until the letters that are spoken by either Joe or Mary form a complete word.\nThe player who first forms a complete word loses the game.\nThis means that even if Joe thinks of the word &amp;quot;fire&amp;quot; and tells Mary the first three letters,\n&amp;quot;fir&amp;quot;, he loses because &amp;quot;fir&amp;quot; is also a valid English word.\n&lt;/p&gt;\n\n&lt;p&gt;\nIn reality, the player with the biggest word knowledge will most often win this game, but in this\nproblem we will assume that both players know exactly the same words (and that none\nof them bluff or cheat). If both players play perfectly, it&apos;s possible to determine the outcome of the\ngame. We define &amp;quot;perfect play&amp;quot; to be when a player strives to win the game in as few turns as possible\n(knowing that his opponent also plays perfectly), but also, if he/she can&apos;t win the game, to lose as slowly\nas possible. See examples 0 and 1 for clarification.\n&lt;/p&gt;\n\n&lt;p&gt;\nThe outcome of the game is the final word said by the player who loses. Note that if the\nlength of this word is odd, it means the second player will win since the first player\nwill always say sequences with an odd number of letters, and vice versa. If at any point it doesn&apos;t\nmatter which letter a player chooses, he/she will choose the one that is alphabetically first (see example 2).\n&lt;/p&gt;\n\n&lt;p&gt;\nCreate a class AWordGame containing the method outcome that takes a vector &amp;lt;string&amp;gt;\n&lt;b&gt;wordList&lt;/b&gt; containing the words that both players know, and returns a string,\nthe final word said by the player that loses the game. Each element in &lt;b&gt;wordList&lt;/b&gt;\nwill contain a space separated list of words.\n&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;AWordGame&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;outcome&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;vector &amp;lt;string&amp;gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;string&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;string outcome(vector &amp;lt;string&amp;gt; wordList)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The words in &lt;b&gt;wordList&lt;/b&gt; may not necessarily be English words, or words in any language at all (see example 3).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;You should assume that the players are aware that both players are using the same word list.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;wordList&lt;/b&gt; will contain between 1 and 50 elements inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element in &lt;b&gt;wordList&lt;/b&gt; will contain between 1 and 50 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;wordList&lt;/b&gt; will contain a space separated list of lowercase words (&apos;a&apos;-&apos;z&apos;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each word in &lt;b&gt;wordList&lt;/b&gt; will be between 1 and 20 characters, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;No word will appear more than once in &lt;b&gt;wordList&lt;/b&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Elements in &lt;b&gt;wordList&lt;/b&gt; will not contain leading or trailing spaces.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;There will be exactly one space between each word in &lt;b&gt;wordList&lt;/b&gt;.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;pascal program programmer task tree&amp;quot;,\n &amp;quot;treacherous treachery tread trace&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;treacherous&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;\nLet&apos;s call the two players Joe and Mary, as before. At the beginning of the\ngame, Joe can choose between the letters &apos;p&apos; and &apos;t&apos;, since all words in\nthe wordlist start with either of these letters. Assume first that he\nchooses &apos;p&apos;. Mary can then choose &apos;a&apos;, which will narrow down the possible\nwords left to only &amp;quot;pascal&amp;quot;. Since that&apos;s a word with even length,\nMary will lose the game if she chooses &apos;a&apos;. However, if she chooses &apos;r&apos;,\nso the two first letters are &amp;quot;pr&amp;quot;, she will win the game since Joe\nwill be forced to say &amp;quot;program&amp;quot;. Hence Joe will lose the game after\n7 turns if he starts the game with &apos;p&apos;.\n&lt;/p&gt;\n\n&lt;p&gt;\nIf Joe starts with &apos;t&apos;, Mary will choose &apos;r&apos; since choosing &apos;a&apos; will lead\nto the work &amp;quot;task&amp;quot; which causes Joe to win. Now Joe will choose &apos;e&apos; as the third\nletter since choosing &apos;a&apos; will cause Joe lose the game with the word &amp;quot;trace&amp;quot;\nin two more turns. Mary is forced to select &apos;a&apos; (the four first letters are now\n&amp;quot;trea&amp;quot;), and Joe must select &apos;c&apos; to avoid immediate loss. The next three\nletters, &apos;h&apos; (by Mary), &apos;e&apos; (by Joe), &apos;r&apos; (by Mary) are all forced. Joe\ncan now choose between &apos;y&apos; and &apos;o&apos;, but both these choices will also\nlead to a loss. Hence Joe will always lose the game, no matter what he does.\nThe slowest loss is along the most recent path discussed, eventually leading\nto the word &amp;quot;treacherous&amp;quot;.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;pascal programmer task tree&amp;quot;,\n &amp;quot;treacherous treachery tread trace&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;programmer&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;\nHere we have the same word list as above, with the exception that\nthe word &amp;quot;program&amp;quot; has been removed. If Joe starts the game with &apos;t&apos;,\nhe will of course lose again since the absence of &amp;quot;program&amp;quot; won&apos;t\naffect the outcome then. If he chooses &apos;p&apos; however, he will win the game,\nbecause the two words starting with &apos;p&apos; both have even length. Mary,\nwho after Joe&apos;s first turn can select which of the two words will be left,\nwill of course select &apos;r&apos; since the word &amp;quot;programmer&amp;quot; is longer than &amp;quot;pascal&amp;quot;\n(and thus a slower loss).\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;academic&amp;quot;,&amp;quot;base&amp;quot;,&amp;quot;board&amp;quot;,&amp;quot;cola&amp;quot;,&amp;quot;code&amp;quot;,&amp;quot;cute&amp;quot;,&amp;quot;hack&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;code&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;\nIf Joe starts with &apos;b&apos;, he will lose the game because Mary will then select &apos;o&apos;\nand win the game with the word &amp;quot;board&amp;quot;. If Joe starts with some other letter,\nhe will win the game since all other words have even length. The fastest\nwin is any of the words &amp;quot;code&amp;quot;, &amp;quot;cola&amp;quot;, &amp;quot;cute&amp;quot; or &amp;quot;hack&amp;quot; (but not &amp;quot;academic&amp;quot;).\n&lt;/p&gt;\n\n&lt;p&gt;\nSince selecting both &apos;c&apos; and &apos;h&apos; will lead to a fastest win, Joe will\nselect &apos;c&apos; because it&apos;s the first of these letters alphabetically. Mary\ncan select between &apos;o&apos; and &apos;u&apos;, but since both words will lead to a loss\nin two more turns, she chooses &apos;o&apos; which comes before &apos;u&apos; in the alphabet.\nSimilarly, Joe will next time choose &apos;d&apos; (comes before &apos;l&apos;) and the\nfinal word will then be &amp;quot;code&amp;quot;.\n&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{&amp;quot;lxxatbwhoh tooj lgwlu xiub lgwdinr rjjmufijoom&amp;quot;,\n &amp;quot;vfdx toskry xhttofxo rkgqmb xiyyvyo qwbcpjcz&amp;quot;,\n &amp;quot;lgquy ruyyptjv vazlfwy ruyypguoofimw qwbaarpfkukk&amp;quot;,\n &amp;quot;xinhekafyi laehdkt lxxyerjt torxi lxxatijcg rkys&amp;quot;,\n &amp;quot;xpktuvhcxhbg xiyyddlmf vazlfkxp xhf qwbaivq&amp;quot;,\n &amp;quot;tookxlfs xiyydvil lxxatbng qwgzkvt rjlmcuwdug&amp;quot;,\n &amp;quot;tdjlbbsr lxtoivq lwevhyms vfdo tfci lwevhyxmmm&amp;quot;,\n &amp;quot;xpun qexfaistucs xinhgfyv qexxjfg xvljvc&amp;quot;,\n &amp;quot;qwgzgina ruyqzuxbyovm ladihus rjjmufie&amp;quot;,\n &amp;quot;qwgzgif xhnqem lwevhner xpuedqzd lpmedevkt&amp;quot;,\n &amp;quot;vzefddtid lpmeji tfcypcvkqa tdjlbbcrm rjltci&amp;quot;,\n &amp;quot;xhttofxfb xvljve xliwbcyxwg tookxf xhnqnw lgqvnh&amp;quot;,\n &amp;quot;qwbqiu tdjlbbcz laehdycq lgqul qwbcpr lwevhyxi&amp;quot;,\n &amp;quot;xpktuvhyc tdly rntxz xpanwsck laehdycz&amp;quot;,\n &amp;quot;qwgzkva ruyypguj ruyqvsz rntg xibyr qwc xhnss&amp;quot;,\n &amp;quot;xltrqddu vzcsdu qwbaijk lwevhymb xinhgfyo qwgzgf&amp;quot;,\n &amp;quot;xhnqnggu toskrtau rjlmcums toskwaks xiyydvgx&amp;quot;,\n &amp;quot;xiut qwbaartdb qexo rjlquefm xinl rjjifftthu&amp;quot;,\n &amp;quot;rkyb lpmvbfn tfcpmbo rjlmczay rpt xltennu&amp;quot;,\n &amp;quot;lgwdirzi lpmtvbija xpanwscbh tfur xhnqngrnhci&amp;quot;,\n &amp;quot;xltrqbwdbl xlbwe rkghbk qwgzkk tdjw tdjry xvlfztz&amp;quot;,\n &amp;quot;qwbaarpuyyse toswj xhttozvtv qwgc lxy toskrtawp&amp;quot;,\n &amp;quot;rkgqx lgwdings xinhgfx lxtjtipnoy tfcpmbawxv&amp;quot;,\n &amp;quot;vazlfwlo lpmvbxcct tfcpo lgqvnq lgkxgg rjlmczrm&amp;quot;,\n &amp;quot;xpke rnte vajnf tfuwqdp qom xinhgcmsbmi tookxlfu&amp;quot;,\n &amp;quot;xibyd xpatx lwevhnbn ladihuxw xpuep lxxaq vui&amp;quot;,\n &amp;quot;lgkwbgs xvv tfuariim vazb xhva xinjovn xltrqdnqwy&amp;quot;,\n &amp;quot;rjlmil xinhgcmk vzyvo lgwdplzpcon xiyydvgge ladp&amp;quot;,\n &amp;quot;tdjlbudh lxxb lxxyerjynyx qwf xliwgsno lxtjetr&amp;quot;,\n &amp;quot;xhttoftrvcabo xiyyddlqf xinheijxf rkghbn tfcype&amp;quot;,\n &amp;quot;vfk xvayc xvlfzti laey rjltgh lgkmp rql vltqmow&amp;quot;,\n &amp;quot;vzcsm qwbaivjn lpmvbxcwj qexxjfh lxtoivjrd&amp;quot;,\n &amp;quot;lxxydxb xltl toskway xuyf tdlu tfuwhkp lxxatbwp&amp;quot;,\n &amp;quot;lgkxgt qexfaiku xpktgyllgg vaq xlbiv lpmtvbikk&amp;quot;,\n &amp;quot;lpmtvbgfo xiyphm tfcpmbau ruyd xlbil rkykcbf&amp;quot;,\n &amp;quot;xpktgiusyzg lwevhnesh tdjrfy xhnsqe vzcq lgkmk&amp;quot;,\n &amp;quot;lgwdirzsec vzefddtdbx lxtoii rjlmczau torak&amp;quot;,\n &amp;quot;lpmtvbgoavjeq lxtjtipmhy xltrqddg vltqmytw&amp;quot;,\n &amp;quot;rlxnh laehr xhtfmxvjn vltqmycl lgkwe qwbaijhx&amp;quot;,\n &amp;quot;rjlmczro rkiaj xpktgia lwevuwow ruyqvsln lxtjtihl&amp;quot;,\n &amp;quot;tdssjxz xiyydvie qwbaartk torax xlbwa xinheiha&amp;quot;,\n &amp;quot;xvsmy vzcsds ruyqzuykr toskwakl tdjrfg vflz lxta&amp;quot;,\n &amp;quot;xhnqnggj lxtoivjw tfuwhr lxtjetdp qexxjtg&amp;quot;,\n &amp;quot;rnm xiue xpj vazlfwlfdg xhttozqr rkykcbo&amp;quot;,\n &amp;quot;qwbcpjcmv tfuardg qwgzginklo tdssjd tfuardti lxl&amp;quot;,\n &amp;quot;rlxb xhttye lwevuwl lgwiw rkykcmhltv qwgbsrgo&amp;quot;,\n &amp;quot;tfuwqdgbh ruyqzxw lwemx xiypf xltrqbwm&amp;quot;,\n &amp;quot;lpmedevcfkt&amp;quot;}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: &amp;quot;tfcpmbawxv&amp;quot;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;p&gt;\nRandom word list.\n&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>outcome</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>wordList</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.String;</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.String</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>pascal program programmer task tree</string> \n         </void> \n         <void index\="1"> \n          <string>treacherous treachery tread trace</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>treacherous</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="2"> \n         <void index\="0"> \n          <string>pascal programmer task tree</string> \n         </void> \n         <void index\="1"> \n          <string>treacherous treachery tread trace</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>programmer</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="7"> \n         <void index\="0"> \n          <string>academic</string> \n         </void> \n         <void index\="1"> \n          <string>base</string> \n         </void> \n         <void index\="2"> \n          <string>board</string> \n         </void> \n         <void index\="3"> \n          <string>cola</string> \n         </void> \n         <void index\="4"> \n          <string>code</string> \n         </void> \n         <void index\="5"> \n          <string>cute</string> \n         </void> \n         <void index\="6"> \n          <string>hack</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>code</string> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="1"> \n       <void index\="0"> \n        <array class\="java.lang.String" length\="48"> \n         <void index\="0"> \n          <string>lxxatbwhoh tooj lgwlu xiub lgwdinr rjjmufijoom</string> \n         </void> \n         <void index\="1"> \n          <string>vfdx toskry xhttofxo rkgqmb xiyyvyo qwbcpjcz</string> \n         </void> \n         <void index\="2"> \n          <string>lgquy ruyyptjv vazlfwy ruyypguoofimw qwbaarpfkukk</string> \n         </void> \n         <void index\="3"> \n          <string>xinhekafyi laehdkt lxxyerjt torxi lxxatijcg rkys</string> \n         </void> \n         <void index\="4"> \n          <string>xpktuvhcxhbg xiyyddlmf vazlfkxp xhf qwbaivq</string> \n         </void> \n         <void index\="5"> \n          <string>tookxlfs xiyydvil lxxatbng qwgzkvt rjlmcuwdug</string> \n         </void> \n         <void index\="6"> \n          <string>tdjlbbsr lxtoivq lwevhyms vfdo tfci lwevhyxmmm</string> \n         </void> \n         <void index\="7"> \n          <string>xpun qexfaistucs xinhgfyv qexxjfg xvljvc</string> \n         </void> \n         <void index\="8"> \n          <string>qwgzgina ruyqzuxbyovm ladihus rjjmufie</string> \n         </void> \n         <void index\="9"> \n          <string>qwgzgif xhnqem lwevhner xpuedqzd lpmedevkt</string> \n         </void> \n         <void index\="10"> \n          <string>vzefddtid lpmeji tfcypcvkqa tdjlbbcrm rjltci</string> \n         </void> \n         <void index\="11"> \n          <string>xhttofxfb xvljve xliwbcyxwg tookxf xhnqnw lgqvnh</string> \n         </void> \n         <void index\="12"> \n          <string>qwbqiu tdjlbbcz laehdycq lgqul qwbcpr lwevhyxi</string> \n         </void> \n         <void index\="13"> \n          <string>xpktuvhyc tdly rntxz xpanwsck laehdycz</string> \n         </void> \n         <void index\="14"> \n          <string>qwgzkva ruyypguj ruyqvsz rntg xibyr qwc xhnss</string> \n         </void> \n         <void index\="15"> \n          <string>xltrqddu vzcsdu qwbaijk lwevhymb xinhgfyo qwgzgf</string> \n         </void> \n         <void index\="16"> \n          <string>xhnqnggu toskrtau rjlmcums toskwaks xiyydvgx</string> \n         </void> \n         <void index\="17"> \n          <string>xiut qwbaartdb qexo rjlquefm xinl rjjifftthu</string> \n         </void> \n         <void index\="18"> \n          <string>rkyb lpmvbfn tfcpmbo rjlmczay rpt xltennu</string> \n         </void> \n         <void index\="19"> \n          <string>lgwdirzi lpmtvbija xpanwscbh tfur xhnqngrnhci</string> \n         </void> \n         <void index\="20"> \n          <string>xltrqbwdbl xlbwe rkghbk qwgzkk tdjw tdjry xvlfztz</string> \n         </void> \n         <void index\="21"> \n          <string>qwbaarpuyyse toswj xhttozvtv qwgc lxy toskrtawp</string> \n         </void> \n         <void index\="22"> \n          <string>rkgqx lgwdings xinhgfx lxtjtipnoy tfcpmbawxv</string> \n         </void> \n         <void index\="23"> \n          <string>vazlfwlo lpmvbxcct tfcpo lgqvnq lgkxgg rjlmczrm</string> \n         </void> \n         <void index\="24"> \n          <string>xpke rnte vajnf tfuwqdp qom xinhgcmsbmi tookxlfu</string> \n         </void> \n         <void index\="25"> \n          <string>xibyd xpatx lwevhnbn ladihuxw xpuep lxxaq vui</string> \n         </void> \n         <void index\="26"> \n          <string>lgkwbgs xvv tfuariim vazb xhva xinjovn xltrqdnqwy</string> \n         </void> \n         <void index\="27"> \n          <string>rjlmil xinhgcmk vzyvo lgwdplzpcon xiyydvgge ladp</string> \n         </void> \n         <void index\="28"> \n          <string>tdjlbudh lxxb lxxyerjynyx qwf xliwgsno lxtjetr</string> \n         </void> \n         <void index\="29"> \n          <string>xhttoftrvcabo xiyyddlqf xinheijxf rkghbn tfcype</string> \n         </void> \n         <void index\="30"> \n          <string>vfk xvayc xvlfzti laey rjltgh lgkmp rql vltqmow</string> \n         </void> \n         <void index\="31"> \n          <string>vzcsm qwbaivjn lpmvbxcwj qexxjfh lxtoivjrd</string> \n         </void> \n         <void index\="32"> \n          <string>lxxydxb xltl toskway xuyf tdlu tfuwhkp lxxatbwp</string> \n         </void> \n         <void index\="33"> \n          <string>lgkxgt qexfaiku xpktgyllgg vaq xlbiv lpmtvbikk</string> \n         </void> \n         <void index\="34"> \n          <string>lpmtvbgfo xiyphm tfcpmbau ruyd xlbil rkykcbf</string> \n         </void> \n         <void index\="35"> \n          <string>xpktgiusyzg lwevhnesh tdjrfy xhnsqe vzcq lgkmk</string> \n         </void> \n         <void index\="36"> \n          <string>lgwdirzsec vzefddtdbx lxtoii rjlmczau torak</string> \n         </void> \n         <void index\="37"> \n          <string>lpmtvbgoavjeq lxtjtipmhy xltrqddg vltqmytw</string> \n         </void> \n         <void index\="38"> \n          <string>rlxnh laehr xhtfmxvjn vltqmycl lgkwe qwbaijhx</string> \n         </void> \n         <void index\="39"> \n          <string>rjlmczro rkiaj xpktgia lwevuwow ruyqvsln lxtjtihl</string> \n         </void> \n         <void index\="40"> \n          <string>tdssjxz xiyydvie qwbaartk torax xlbwa xinheiha</string> \n         </void> \n         <void index\="41"> \n          <string>xvsmy vzcsds ruyqzuykr toskwakl tdjrfg vflz lxta</string> \n         </void> \n         <void index\="42"> \n          <string>xhnqnggj lxtoivjw tfuwhr lxtjetdp qexxjtg</string> \n         </void> \n         <void index\="43"> \n          <string>rnm xiue xpj vazlfwlfdg xhttozqr rkykcbo</string> \n         </void> \n         <void index\="44"> \n          <string>qwbcpjcmv tfuardg qwgzginklo tdssjd tfuardti lxl</string> \n         </void> \n         <void index\="45"> \n          <string>rlxb xhttye lwevuwl lgwiw rkykcmhltv qwgbsrgo</string> \n         </void> \n         <void index\="46"> \n          <string>tfuwqdgbh ruyqzxw lwemx xiypf xltrqbwm</string> \n         </void> \n         <void index\="47"> \n          <string>lpmedevcfkt</string> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <string>tfcpmbawxv</string> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
